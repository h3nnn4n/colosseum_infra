---
- name: Add PostgreSQL GPG key
  ansible.builtin.get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /etc/apt/trusted.gpg.d/postgresql.gpg
    mode: '0644'

- name: Add PostgreSQL repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
    state: present
    filename: pgdg

- name: Remove old postgres versions
  apt:
    pkg:
      - postgresql-16
      - postgres
    state: absent
  ignore_errors: yes

- name: Refresh apt and install base packages
  apt:
    pkg:
      - postgresql-17
      - postgresql-client-17
      - postgresql-common
      - libpq-dev
      - python3-psycopg2
      - ca-certificates
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Check if PostgreSQL cluster exists
  ansible.builtin.stat:
    path: /var/lib/postgresql/17/main/PG_VERSION
  register: pg_version_file

- name: Initialize PostgreSQL cluster
  ansible.builtin.command: pg_createcluster 17 main
  become: yes
  become_user: root
  when: not pg_version_file.stat.exists

- name: Copy pg hba settings
  copy:
    src: pg_hba.conf
    dest: /etc/postgresql/17/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0640'  # Read-write to owner, read-only to group

- name: Setup pg settings
  template:
    src: postgresql.conf
    dest: /etc/postgresql/17/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0640'  # Read-write to owner, read-only to group
  register: pg_settings

- name: Ensure WAL archival folder is present
  file:
    path: "/var/lib/postgresql/17/main/pg_wal_bkp"
    state: directory
    recurse: yes
    owner: postgres
    group: postgres

- name: Create replica.signal for replica instance
  file:
    path: "/var/lib/postgresql/17/main/standby.signal"
    state: touch
    modification_time: preserve
    access_time: preserve
  when: is_replica_db | default(false) | bool == true

- name: Ensure replica.signal doesn't exist for primary
  file:
    path: "/var/lib/postgresql/17/main/standby.signal"
    state: absent
  when: is_replica_db | default(false) | bool == false

- name: Ensure postgres is enabled
  service:
    name: postgresql
    enabled: yes

- name: Ensure postgres is restarted
  service:
    name: postgresql
    state: restarted
  when: pg_settings.changed

- name: Create app database
  postgresql_db:
    state: present
    name: "{{ vault_postgres_database }}"
  become: yes
  become_user: postgres

- name: Create db user
  postgresql_user:
    state: present
    name: "{{ vault_postgres_user }}"
    password: "{{ vault_postgres_password }}"
  become: yes
  become_user: postgres

- name: Grant db user access to app db
  postgresql_privs:
    type: database
    database: "{{ vault_postgres_database }}"
    roles: "{{ vault_postgres_user }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres
  when: is_replica_db | default(false) | bool == false

- name: Grant schema privileges to the database user
  postgresql_privs:
    database: "{{ vault_postgres_database }}"
    roles: "{{ vault_postgres_user }}"
    type: schema
    objs: public
    privs: ALL
    grant_option: yes
  become: yes
  become_user: postgres
  when: is_replica_db | default(false) | bool == false

- name: Make user the owner of the public schema
  postgresql_query:
    db: "{{ vault_postgres_database }}"
    query: ALTER SCHEMA public OWNER TO {{ vault_postgres_user }};
  become: yes
  become_user: postgres
  when: is_replica_db | default(false) | bool == false

- name: Set default privileges in the public schema
  postgresql_query:
    db: "{{ vault_postgres_database }}"
    query: |
      ALTER DEFAULT PRIVILEGES FOR ROLE {{ vault_postgres_user }} IN SCHEMA public
      GRANT ALL ON TABLES TO {{ vault_postgres_user }};

      ALTER DEFAULT PRIVILEGES FOR ROLE {{ vault_postgres_user }} IN SCHEMA public
      GRANT ALL ON SEQUENCES TO {{ vault_postgres_user }};

      ALTER DEFAULT PRIVILEGES FOR ROLE {{ vault_postgres_user }} IN SCHEMA public
      GRANT ALL ON TYPES TO {{ vault_postgres_user }};
  become: yes
  become_user: postgres
  when: is_replica_db | default(false) | bool == false
